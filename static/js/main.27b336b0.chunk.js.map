{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","titleDirty","setTitleDirty","imgUrlDirty","setImgUrlDirty","imdbUrlDirty","setImdbUrlDirty","imdbIdDirty","setImdbIdDirty","titleError","setTitleError","imgUrlError","setImgUrlError","imdbUrlError","setImdbUrlError","imdbIdError","setImdbIdError","isFormValid","setIsFormValid","useEffect","blurHandler","event","target","name","onSubmit","preventDefault","type","value","onChange","onBlur","placeholder","classnames","error","style","color","test","String","toLowerCase","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27b336b0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [titleDirty, setTitleDirty] = useState(false);\n  const [imgUrlDirty, setImgUrlDirty] = useState(false);\n  const [imdbUrlDirty, setImdbUrlDirty] = useState(false);\n  const [imdbIdDirty, setImdbIdDirty] = useState(false);\n  const [titleError, setTitleError] = useState(\n    'The Title field cannot be empty',\n  );\n  const [imgUrlError, setImgUrlError] = useState(\n    'The imgUrl field cannot be empty',\n  );\n  const [imdbUrlError, setImdbUrlError] = useState(\n    'The imdbUrl field cannot be empty',\n  );\n  const [imdbIdError, setImdbIdError] = useState(\n    'The imdbId field cannot be empty',\n  );\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  useEffect(() => {\n    if (titleError || imgUrlError || imdbUrlError || imdbIdError) {\n      setIsFormValid(false);\n    } else {\n      setIsFormValid(true);\n    }\n  }, [titleError, imgUrlError, imdbUrlError, imdbIdError]);\n\n  const blurHandler = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    switch (event.target.name) {\n      case 'title':\n        setTitleDirty(true);\n        break;\n      case 'imgUrl':\n        setImgUrlDirty(true);\n        break;\n      case 'imdbUrl':\n        setImdbUrlDirty(true);\n        break;\n      case 'imdbId':\n        setImdbIdDirty(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const titleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n\n    if (value) {\n      setTitleError('');\n    } else {\n      setTitleError('The Title field cannot be empty');\n    }\n  };\n\n  const descriptionHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setDescription(value);\n  };\n\n  const imgUrlHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setImgUrl(value);\n    // eslint-disable-next-line max-len\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (!regex.test(String(value).toLowerCase())) {\n      setImgUrlError('Incorrect url');\n    } else {\n      setImgUrlError('');\n    }\n  };\n\n  const imdbUrlHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setImdbUrl(value);\n    // eslint-disable-next-line max-len\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    if (!regex.test(String(value).toLowerCase())) {\n      setImdbUrlError('Incorrect url');\n    } else {\n      setImdbUrlError('');\n    }\n  };\n\n  const imdbIdHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setImdbId(value);\n\n    if (value) {\n      setImdbIdError('');\n    } else {\n      setImdbIdError('The imdbId field cannot be empty');\n    }\n  };\n\n  const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newMovie = {\n      title,\n      description: description || 'No description',\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(newMovie);\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"mb-3\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={titleHandler}\n          onBlur={blurHandler}\n          placeholder=\"Enter a title\"\n          className={classnames(\n            'form-control shadow-none p-3 mb-5 bg-light rounded', {\n              error: titleDirty && titleError,\n            },\n          )}\n        />\n      </div>\n      {(titleDirty && titleError)\n      && <div style={{ color: 'red' }}>{titleError}</div>}\n      <div className=\"mb-3\">\n        <input\n          type=\"text\"\n          name=\"description\"\n          value={description}\n          onChange={descriptionHandler}\n          placeholder=\"Enter a description\"\n          className=\"form-control shadow-none p-3 mb-5 bg-light rounded\"\n        />\n      </div>\n      <div className=\"mb-3\">\n        <input\n          type=\"url\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          onChange={imgUrlHandler}\n          onBlur={blurHandler}\n          placeholder=\"Enter an imgUrl\"\n          className={classnames(\n            'form-control shadow-none p-3 mb-5 bg-light rounded', {\n              error: imgUrlDirty && imgUrlError,\n            },\n          )}\n        />\n      </div>\n      {(imgUrlDirty && imgUrlError)\n      && <div style={{ color: 'red' }}>{imgUrlError}</div>}\n      <div className=\"mb-3\">\n        <input\n          type=\"url\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={imdbUrlHandler}\n          placeholder=\"Enter an imdbUrl\"\n          onBlur={blurHandler}\n          className={classnames(\n            'form-control shadow-none p-3 mb-5 bg-light rounded', {\n              error: imdbUrlDirty && imdbUrlError,\n            },\n          )}\n        />\n      </div>\n      {(imdbUrlDirty && imdbUrlError)\n      && <div style={{ color: 'red' }}>{imdbUrlError}</div>}\n      <div className=\"mb-3\">\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          value={imdbId}\n          onChange={imdbIdHandler}\n          placeholder=\"Enter an imdbId\"\n          onBlur={blurHandler}\n          className={classnames(\n            'form-control shadow-none p-3 mb-5 bg-light rounded', {\n              error: imdbIdDirty && imdbIdError,\n            },\n          )}\n        />\n      </div>\n      {(imdbIdDirty && imdbIdError)\n      && <div style={{ color: 'red' }}>{imdbIdError}</div>}\n      <button\n        type=\"submit\"\n        disabled={!isFormValid}\n        className={classnames('btn btn-info', {\n          'btn-outline-secondary': !isFormValid,\n        })}\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <h1 className=\"title text-muted fs-2\">You can add a new movie!</h1>\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}